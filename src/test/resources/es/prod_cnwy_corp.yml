dataSourceKey: defaultDS
destination: cnwybinlog
esMapping:
  env: prod
  _id: id
  pk: id
  _index: cnwy_corp_prod_index_alias
  mappingMetadataTimeout: 600000
  upsert: false
  writeNull: false
  indexUpdatedTime: 'indexUpdatedTime'
  sql: "SELECT
	corp.id ,
	corp.`name`,
	GROUP_CONCAT(if(corpName.type = 2, corpName.`name`, null)) as aliasNames,
	GROUP_CONCAT(if(corpName.type = 3, corpName.`name`, null)) as historyNames,
	corp.group_name as groupCompany,
	corp.home_url as homeUrl,
	corp.`source_enum` as source,
	corp.credit_code as creditCode,
	corp.`status`,
	corp.unique_key as uniqueKey,
	corp.register_status_name as registerStatusName,
	corp.manual_flag as manualFlag,
	corp.create_time as createTime,
	corp.update_time as updateTime,
	corp.data_type as dataType,
	corp.central_country_ent_flag as centralCountryEntFlag
    FROM corp corp
	LEFT JOIN corp_name corpName on corpName.corp_id = corp.id "
  objFields:
    aliasNames:
      type: array
      split: ','
    historyNames:
      type: array
      split: ','
    regionList:
      type: array-sql
      sql: "SELECT
                corpRegion.province_id as provinceId,
                corpRegion.city_id as cityId,
                corpRegion.district_id as districtId,
                corpRegion.region_id as regionId,
                province.`name` as provinceName,
                city.`name` as cityName,
                district.`name` as districtName,
                concat(if(region.lat< region.lng, region.lat,region.lng), ',', if(region.lat > region.lng, region.lat,region.lng)) as geo
            FROM corp_region corpRegion
            LEFT JOIN region region on region.id = corpRegion.region_id
            LEFT JOIN region province on province.id = corpRegion.province_id
            LEFT JOIN region city on city.id = corpRegion.city_id
            LEFT JOIN region district on district.id = corpRegion.district_id
 "
      onParentChangeWhereSql: 'WHERE corpRegion.corp_id = #{id} '
      onChildChangeWhereSql: 'WHERE corpRegion.corp_id = #{corp_id} '
    tagList$tagIds:
      type: array
      split: ','
    tagList:
      type: array-sql
      sql: "SELECT
              group_concat(corpRelationTag.tag_id) as tagIds,
              corpTag.category_id as categoryId
          FROM corp_relation_tag corpRelationTag
          INNER JOIN corp_tag corpTag on corpTag.id = corpRelationTag.tag_id
          GROUP BY corpRelationTag.corp_id, corpTag.category_id
"
      onParentChangeWhereSql: 'WHERE corpRelationTag.corp_id = #{id} '
      onChildChangeWhereSql: 'WHERE corpRelationTag.corp_id = #{corp_id} '

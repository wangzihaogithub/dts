dataSourceKey: defaultDS
destination: cnwybinlog
esMapping:
  env: prod
  _id: id
  pk: id
  _index: cnwy_job_prod_index_alias
  mappingMetadataTimeout: 600000
  upsert: false
  writeNull: false
  indexUpdatedTime: 'indexUpdatedTime'
  sql: "SELECT
        job.id as id,
        job.type as type,
        job.education as education,
        job.nature as nature,
        job.`source` as source,
        job.`name` as name,
        job.gender as gender,
        job.age_low as ageLow,
        job.age_high as ageHigh,
        job.link as link,
        job.notice_url as noticeUrl,
        job.foreign_lang as foreignLang,
        job.political as political,
        job.`session` as session,
        job.`year` as year,
        job.`year_low` as yearLow,
        job.`year_high` as yearHigh,
        job.account as account,
        job.welfare as welfare,
        job.content as content,
        job.job_start_time as jobStartTime,
        job.job_end_time as jobEndTime,
        job.target_id as targetId,
        job.`status` as status,
        job.company_name as companyName,
        job.company_link as companyLink,
        job.create_time as createTime,
        job.update_time as updateTime,
        job.delete_user as deleteUser,
        job.delete_time as deleteTime,
        job.delete_reason as deleteReason
      FROM job job
      "
  objFields:
    education:
      type: array
      split: '[、]'
    foreignLang:
      type: array
      split: '[、]'
    political:
      type: array
      split: '[、]'
    session:
      type: array
      split: '[、]'
    corp$aliasNames:
      type: array
      split: ','
    corp$historyNames:
      type: array
      split: ','
    corp:
      type: object-sql
      sql: "SELECT
              corp.id ,
              corp.`name`,
              GROUP_CONCAT(if(corpName.type = 2, corpName.`name`, null)) as aliasNames,
              GROUP_CONCAT(if(corpName.type = 3, corpName.`name`, null)) as historyNames,
              corp.group_name as groupCompany,
              corp.data_type as dataType,
              corp.central_country_ent_flag as centralCountryEntFlag
            FROM corp corp
            LEFT JOIN corp_name corpName on corpName.corp_id = corp.id 
      "
      onParentChangeWhereSql: 'WHERE corp.id = #{corp_id} '
      onChildChangeWhereSql: 'WHERE corp.id = #{id} '
    corpTagList$tagIds:
      type: array
      split: ','
    corpTagList:
      type: array-sql
      sql: "SELECT
              group_concat(corpRelationTag.tag_id) as tagIds,
              corpTag.category_id as categoryId
          FROM corp_relation_tag corpRelationTag
          INNER JOIN corp_tag corpTag on corpTag.id = corpRelationTag.tag_id
          GROUP BY corpRelationTag.corp_id, corpTag.category_id
"
      onParentChangeWhereSql: 'WHERE corpRelationTag.corp_id = #{corp_id} '
      onChildChangeWhereSql: 'WHERE corpRelationTag.corp_id = #{corp_id} '
    regionList:
      type: array-sql
      sql: "SELECT
              region.id as id,
              region.region_id as regionId,
              region.province_id as provinceId,
              region.province_name as provinceName,
              region.city_id as cityId,
              region.city_name as cityName,
              region.district_id as districtId,
              region.district_name as districtName,
              region.address as address,
              region.region_id_colloquial as regionIdColloquial,
              region.region_name_colloquial as regionNameColloquial,
              concat(if(region.lat< region.lng, region.lat,region.lng), ',', if(region.lat > region.lng, region.lat,region.lng)) as geo
          FROM job_region region "
      onParentChangeWhereSql: 'WHERE region.job_id = #{id} '
      onChildChangeWhereSql: 'WHERE region.job_id = #{job_id} '
    specialtyList:
      type: array-sql
      sql: "SELECT
              specialty.id as id,
              specialty.specialty_id as specialtyId,
              specialty.specialty_name as specialtyName,
              specialty.specialty_id_colloquial as specialtyIdColloquial,
              specialty.specialty_name_colloquial as specialtyNameColloquial
          FROM job_specialty specialty "
      onParentChangeWhereSql: 'WHERE specialty.job_id = #{id} '
      onChildChangeWhereSql: 'WHERE specialty.job_id = #{job_id} '
    corpRegionList:
      type: array-sql
      sql: "SELECT
                   corpRegion.province_id as provinceId,
                   corpRegion.city_id as cityId,
                   corpRegion.district_id as districtId,
                   corpRegion.region_id as regionId,
                   province.`name` as provinceName,
                   city.`name` as cityName,
                   district.`name` as districtName,
                   concat(if(region.lat< region.lng, region.lat,region.lng), ',', if(region.lat > region.lng, region.lat,region.lng)) as geo
               FROM corp_region corpRegion
               LEFT JOIN region region on region.id = corpRegion.region_id
               LEFT JOIN region province on province.id = corpRegion.province_id
               LEFT JOIN region city on city.id = corpRegion.city_id
               LEFT JOIN region district on district.id = corpRegion.district_id
               GROUP BY corpRegion.id
    "
      onParentChangeWhereSql: 'WHERE corpRegion.corp_id = #{corp_id} '
      onChildChangeWhereSql: 'WHERE corpRegion.corp_id = #{corp_id} '